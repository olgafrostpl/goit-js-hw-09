{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,cAAeC,SAASC,cAAc,UAExC,IAAIF,cAAEG,GAAkBJ,EAIxB,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EACEG,EAAAjB,GAASkB,OAAOC,QACd,uBAAqBX,QAAiBC,QAI1CM,EACEE,EAAAjB,GAASkB,OAAOE,QACd,sBAAoBZ,QAAiBC,OAAW,GAIrDA,EAAM,G,CAnBbH,EAAce,iBAAiB,UAuB/B,SAA6BC,GAC3BA,EAAEC,iBAEF,IAAIC,EAAOC,OAAOH,EAAEI,cAAcF,KAAKG,OACnClB,EAAQgB,OAAOH,EAAEI,cAAcjB,MAAMkB,OACrCC,EAASH,OAAOH,EAAEI,cAAcE,OAAOD,OAE3C,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGpB,GACdqB,MAAKX,GAAWY,QAAQC,IAAI,yBAC1BC,OAAIC,GAASH,QAAQC,IAAI,wBAC9BvB,GAASe,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputFormData: document.querySelector('.form'),\n};\nlet { inputFormData } = refs;\n\ninputFormData.addEventListener('submit', startCreatePromises);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      } else {\n        reject(\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        );\n      }\n    }, delay);\n  });\n}\n\nfunction startCreatePromises(e) {\n  e.preventDefault();\n\n  let step = Number(e.currentTarget.step.value);\n  let delay = Number(e.currentTarget.delay.value);\n  let amount = Number(e.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(success => console.log('✅ Fulfilled promise'))\n      .catch(error => console.log('❌ Rejected promise'));\n    delay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","inputFormData","document","querySelector","$47d4ff9957288465$var$inputFormData","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","e","preventDefault","step","Number","currentTarget","value","amount","i","then","console","log","catch","error"],"version":3,"file":"03-promises.3ca4c171.js.map"}